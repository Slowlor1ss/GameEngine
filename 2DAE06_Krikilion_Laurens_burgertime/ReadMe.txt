Engine features

  All required game programming patterns like
    SceneManager
    Game Loop
    Command Pattern
    States (used for UI, as in the main menu pause menu, switching between those and choosing game modes)
    Observer Pattern
    Component
    A service locator for the sound system

  Extra
    Full X-Input gamepad support & keyboard support
    also, the thumbpads and triggers of the controller have been implemented
    these use an struct with a std::variant to request the values
    I used the std::variant to cleanly allow the user to request the float value of triggers
    or the vector of thumbsticks
    

    Box-2d support with premade components like colliders and contact notifying system
    the notifying system is using the observer pattern but it would have been better if I used an
    event-based system so only components that subscribe to the event get notified,
    due to realizing this too late, I did not do this yet
    The collider itself has most things implemented like setting filter options,
    setting to be a trigger or a collider, setting it to a static or dynamic object
    local offsets and size...


Game design choses

    for loading the map I decided to read it from a txt file where each character maps to
    certain colliders or items etc.
    This txt file is generated by a small python file that reads an image and thus allows you
    to simply paint the levels, the resulting text file does need a small bit of adjusting for 
    optimization reasons in the project, but this does make it a lot easier than having to manually
    place everything

    The burgers exist out of a parent object and some child objects containing the sprite and collider
    this allows easy checking if the player walked over the whole burger and visualizing what part he
    already walked over, and of course, allows everything to fall together

    Any game object could technically be controlled(movement-wise) by adding the PossessGameObject
    component, this allows for using the same code for moving the player as for moving the enemy in
    versus mode and possibly other objects if so desired.

    I also left the steam SDK in there because I found it pretty cool :)

    

Link to GitHub: https://github.com/Slowlor1ss/GameEngine